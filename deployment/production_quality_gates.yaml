# Production Quality Gates Configuration
# Autonomous SDLC - Progressive Enhancement v4.0

apiVersion: v1
kind: ConfigMap
metadata:
  name: progressive-quality-gates-config
  namespace: quality-gates
data:
  config.yaml: |
    # Progressive Quality Gates Production Configuration
    
    environment:
      type: production
      auto_detect: true
      compliance_mode: strict
    
    execution:
      mode: distributed
      resource_tier: enterprise
      scalability_pattern: elastic
      max_concurrent_gates: 20
      timeout_multiplier: 1.5
      
    reliability:
      circuit_breaker_enabled: true
      max_retry_attempts: 3
      graceful_degradation: true
      auto_recovery: true
      
    security:
      security_hardening: true
      vulnerability_scanning: true
      compliance_validation: true
      audit_logging: true
      frameworks:
        - SOC2
        - ISO27001
        - GDPR
        - CCPA
    
    performance:
      caching_enabled: true
      cache_backend: redis
      distributed_cache: true
      performance_monitoring: true
      predictive_scaling: true
      
    monitoring:
      metrics_collection: true
      tracing_enabled: true
      alerting_enabled: true
      health_check_interval: 30
      alert_channels:
        - webhook
        - slack
        - email
      
    gates:
      basic_gates: true
      advanced_gates: true
      security_gates: true
      performance_gates: true
      production_gates: true
      research_gates: false

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: progressive-quality-gates
  namespace: quality-gates
  labels:
    app: progressive-quality-gates
    version: v4.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: progressive-quality-gates
  template:
    metadata:
      labels:
        app: progressive-quality-gates
        version: v4.0
    spec:
      containers:
      - name: quality-gates-runner
        image: terragon/progressive-quality-gates:v4.0
        ports:
        - containerPort: 8080
        - containerPort: 9090
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: quality-gates-secrets
              key: redis-url
        - name: WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: quality-gates-secrets
              key: webhook-url
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: config
          mountPath: /app/config
        - name: cache-storage
          mountPath: /app/cache
      volumes:
      - name: config
        configMap:
          name: progressive-quality-gates-config
      - name: cache-storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: progressive-quality-gates-service
  namespace: quality-gates
spec:
  selector:
    app: progressive-quality-gates
  ports:
  - name: http
    port: 80
    targetPort: 8080
  - name: metrics
    port: 9090
    targetPort: 9090
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: progressive-quality-gates-ingress
  namespace: quality-gates
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - quality-gates.your-domain.com
    secretName: quality-gates-tls
  rules:
  - host: quality-gates.your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: progressive-quality-gates-service
            port:
              number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: progressive-quality-gates-hpa
  namespace: quality-gates
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: progressive-quality-gates
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: v1
kind: Secret
metadata:
  name: quality-gates-secrets
  namespace: quality-gates
type: Opaque
stringData:
  redis-url: "redis://redis-cluster:6379"
  webhook-url: "https://hooks.slack.com/your-webhook-url"
  database-url: "postgresql://user:password@postgres:5432/quality_gates"